import customtkinter as ct
import sys
import os
from tkinter import filedialog
if __name__ == "__main__":
    sys.path.insert(1, '../quarantine')
from quarantine import loadRecord, restore, quarantine

def infectionsGUI(recordPath="../quarantine/quarantined.json", storageFolder="../quarantine/archivedFiles", textbox=None):
    def fileQuarantine():
        filePath = filedialog.askopenfilename()
        if quarantine(filePath, recordPath, storageFolder, textbox):
            updateRestoreOptions()
        
    def folderQuarantine():
        folderPath = filedialog.askdirectory()
        if quarantine(folderPath, recordPath, storageFolder, textbox):
            updateRestoreOptions()

    def buttonRestore():
        nonlocal optionmenu
        nonlocal record
        nonlocal selection
        dest = os.path.abspath(selection.get())
        path = ""
        for key, val in record.items():
            if val == dest:
                path = key
                break
        if path == "":
            print("File not found in record")
            return
        
        print("Restoring " + path)
        if restore(path, recordPath):
            print("Success")
            selection.set("Select File to Restore")
            updateRestoreOptions()
        else:
            print("Failed")
            
    def updateRestoreOptions():
        nonlocal optionmenu
        nonlocal record
        record = loadRecord(recordPath)
        fileOptions = list(record.values())
        optionmenu.configure(values=fileOptions)
    
    ct.set_appearance_mode("dark")
    ct.set_default_color_theme("dark-blue")
    root = ct.CTk()
    root.geometry("300x300")
    root.title("Quarantine and Restore Files")
    
    # Quarantine File
    fileQuarantineButton = ct.CTkButton(master=root, text="Quarantine File", command=fileQuarantine)
    fileQuarantineButton.pack(pady=12, padx=10)
    
    # Quarantine Folder
    folderQuarantineButton = ct.CTkButton(master=root, text="Quarantine Folder", command=folderQuarantine)
    folderQuarantineButton.pack(pady=12, padx=10)
    
    # Restore
    record = loadRecord(recordPath)
    fileOptions = list(record.values())
    selection = ct.StringVar(value="Select File to Restore")
    optionmenu = ct.CTkOptionMenu(master=root, values=fileOptions, variable=selection)
    optionmenu.pack(pady=12, padx=10)
    
    restoreButton = ct.CTkButton(master=root, text="Restore File", command=buttonRestore)
    restoreButton.pack(pady=12, padx=10)
    
    root.mainloop()
    
if __name__ == "__main__":
    restoreGUI()