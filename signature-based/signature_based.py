import hashlib
import pip
#Should install easygui and sqlite3 if not found, should probably fix if it doesn't work
try:
    __import__('easygui')
except ImportError:
    pip.main(['install', 'easygui'])
import easygui
try:
    __import__('sqlite3')
except ImportError:
    pip.main(['install', 'sqlite3'])
import sqlite3

def getHashMD5(filename):
    # Get MD5 hash from user-submitted file
    md5_hash = hashlib.md5()
    with open(filename,"rb") as f:
        for byte_block in iter(lambda: f.read(4096),b""):
            md5_hash.update(byte_block)
        return md5_hash.hexdigest()
    f.close()
    
def compareHashDB(file_hash):
    # Open SQLite database
    connection = sqlite3.connect('HashDB.db')
    cursor = connection.cursor()
    
    cursor.execute('SELECT name FROM HashDB WHERE hash=(?)', (file_hash,))
    output = cursor.fetchone()
    if (output != None):
        for row in output:
            return row
    else:
        return "No infections found!"
        
    connection.commit()
    connection.close()

def hashTests():
    file_hash = '38c07fde8a4d0c51ed48a80ee0931b62'
    assert(compareHashDB(file_hash) == "Trojan.JS.Cryxos")
    file_hash = '320e465e96fac3eaecbc63ea78ac70f6'
    assert(compareHashDB(file_hash) == "W32/Emotet.AWL.gen!Eldorado")

def main():
    filename = easygui.fileopenbox() # Allows user to upload file, placeholder for future GUI
    file_hash = getHashMD5(filename)
    print("Found infections:")
    print(compareHashDB(file_hash))
    #hashTests()

main()

# Some TODO suggestions:
# ----------------------
# Implement other hashing algorithms other than MD5, MD5 is weak and can be faked easily
# Implement support for other databases other than SQLite
# Implement support for multiple malware hash databases
# Convert to C++
