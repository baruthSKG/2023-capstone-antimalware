import hashlib
import zlib

def getHashMD5(filename):
    with open(filename, "rb") as f:
        md5_hash = hashlib.md5()
        for byte_block in iter(lambda: f.read(4096), b""):
            md5_hash.update(byte_block)
        return md5_hash.hexdigest()

def getHashCRC32(filename):
    prev = 0
    with open(filename, "rb") as f:
        for line in f:
            prev = zlib.crc32(line, prev)
    crc32_hash = "%X" % (prev & 0xFFFFFFFF)
    return crc32_hash

def getHashSHA1(filename):
    with open(filename, "rb") as f:
        sha1_hash = hashlib.sha1()
        for byte_block in iter(lambda: f.read(4096), b""):
            sha1_hash.update(byte_block)
        return sha1_hash.hexdigest()

def getHashSHA256(filename):
    with open(filename, "rb") as f:
        sha256_hash = hashlib.sha256()
        for byte_block in iter(lambda: f.read(4096), b""):
            sha256_hash.update(byte_block)
        return sha256_hash.hexdigest()

def getHashSHA384(filename):
    with open(filename, "rb") as f:
        sha384_hash = hashlib.sha384()
        for byte_block in iter(lambda: f.read(4096), b""):
            sha384_hash.update(byte_block)
        return sha384_hash.hexdigest()

def getHashSHA512(filename):
    sha512_hash = hashlib.sha512()
    with open(filename,"rb") as f:
        for byte_block in iter(lambda: f.read(4096),b""):
            sha512_hash.update(byte_block)
        return sha512_hash.hexdigest()
    f.close()
