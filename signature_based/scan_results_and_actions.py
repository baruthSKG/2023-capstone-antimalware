from quarantine import *
from logFunctions import *
from time import gmtime, strftime

#Takes from the user and returns a list of actions taken for each infection
def scanResultsAndActions(found_infections):
    inf_actions = []
    print("\nFOUND INFECTIONS:")
    if found_infections == {}:
        print("No infections found!") 
    else:
        confirm = 0
        app_check = 0
        while (confirm != 999):
            count = 0
            actions = ['Delete', 'Keep', 'Quarantine']
            for key in found_infections:
                if (app_check == 0):
                    inf_actions.append(actions[0])
                print('[', count, ']', '[', inf_actions[count], ']', found_infections[key], '<--', key)
                count = count + 1
            
            print("\n")
            print("ACTIONS:")
            print("-------------------")
            print("[1] Delete All | [2] Delete One/Multiple | [3] Keep All | [4] Keep One/Multiple | [5] Quarantine All | [6] Quarantine One/Multiple")
            print("\n")
            print("[999] Confirm")
            print("\n")
            confirm = input("Choice --> ")
            confirm = int(confirm)
            app_check = 1
            if (confirm % 2 != 0):
                count = 0
                for inf in inf_actions:
                    if (confirm == 1):
                        inf_actions[count] = actions[0]
                    elif (confirm == 3):
                        inf_actions[count] = actions[1]
                    elif (confirm == 5):
                        inf_actions[count] = actions[2]
                    count += 1
            elif (confirm % 2 == 0):
                if (confirm == 2):
                    mult_keyword = "delete"
                elif (confirm == 4):
                    mult_keyword = "keep"
                elif (confirm == 6):
                    mult_keyword = "quarantine"
                print("Enter one or multiple files to", mult_keyword)
                print("(Multiple files separated by comma --> Ex. 1,3,5,7)")
                print("-1 to exit")
                print("\n")
                if (confirm == -1):
                    pass
                else:
                    tmp_list_choice = []
                    tmp_list_choice = input("Choice --> ")
                    tmp_list = tmp_list_choice.split(',')
                    tmp_list = [eval(i) for i in tmp_list]
                    count = 0
                    i = 0
                    for inf in inf_actions:
                        # ??????? This only works with a try/else statement and I don't know why        
                        try:
                            if (count == tmp_list[i]):
                                if (confirm == 2):
                                    inf_actions[count] = actions[0]
                                elif (confirm == 4):
                                    inf_actions[count] = actions[1]
                                elif (confirm == 6):
                                    inf_actions[count] = actions[2]
                                i = i + 1
                            count = count + 1
                        except:
                            pass 
        count = 0
        timestamp = strftime("%m-%d-%Y %H %M %S", gmtime())
        for key in found_infections:
            if (inf_actions[count] == 'Delete'):
                print("Deleting infection", found_infections[key], "--> (", key, ")")
                os.chdir('C:/')
                if os.path.exists(key):
                  os.remove(key)
                infectionLog(timestamp,key,found_infections[key],inf_actions[count])
            elif (inf_actions[count] == 'Quarantine'):
                print("Quarantining infection", found_infections[key], "--> (", key, ")")
                quarantine(key)
                infectionLog(timestamp,key,found_infections[key],inf_actions[count])
            elif (inf_actions[count] == 'Keep'):
                print("Keeping infection", found_infections[key], "--> (", key, ")")
                infectionLog(timestamp,key,found_infections[key],inf_actions[count])
            count += 1
            
    return inf_actions
