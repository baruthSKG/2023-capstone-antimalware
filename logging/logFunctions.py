import sys
sys.path.insert(1, '../')
from ADD_SYS_PATHS import addSysPaths
addSysPaths()
from datetime import *
import os
import customtkinter as ct

path = os.getcwd()
os.makedirs(path + "\..\__logs", exist_ok=True)

#Logs a scanned file for a given timestamp and filepath
def scanLog(timestamp, filepath):
    entry = f"SCANNED FILE: {filepath}\n"
    if not os.path.exists(path + f"\..\__logs\{timestamp}"):
        os.makedirs(path + f"\..\__logs\{timestamp}", exist_ok=True)
    
    with open(path + f"\..\__logs\{timestamp}\ScanLogs.txt","a") as logFile:
        logFile.write(entry)

#Logs a found infection, filepath, and action taken for a given timestamp
def infectionLog(timestamp,filepath,infection_name,action):
    entry = f"INFECTION FOUND IN FILE:{filepath} - {infection_name} ACTION:{action}\n"
    if not os.path.exists(path + f"\..\__logs\{timestamp}"):
        os.makedirs(path + f"\..\__logs\{timestamp}")
    
    with open(path + f"\..\__logs\{timestamp}\InfectionLogs.txt","a") as logFile:
        logFile.write(entry)
    
#Logs an error for a given timestamp
def errorLog(timestamp,filepath,error):
    entry = f"ERROR:{filepath} - {error}\n"
    if not os.path.exists(path + f"\..\__logs\{timestamp}"):
        os.makedirs(path + f"\..\__logs\{timestamp}")
    
    with open(path + f"\..\__logs\{timestamp}\ErrorLogs.txt","a") as logFile:
        logFile.write(entry)


def viewLogs():
    log_content = ""
    logs = os.listdir(path + "\..\__logs")
    for log in logs:
        log_path = path + "\..\__logs\\" + log
        log_content += log + "\n"
        # Infections Found
        if os.path.exists(log_path + "\InfectionLogs.txt"):
            with open(log_path + "\InfectionLogs.txt") as infections_file:
                infections = infections_file.readlines()
                log_content += f"=====Infections Found({len(infections)})=====\n"
                log_content += "".join(infections) + "\n"
            
        # Files Scanned
        if os.path.exists(log_path + "\ScanLogs.txt"):
            with open(log_path + "\ScanLogs.txt") as scanned_file:
                scanned = scanned_file.readlines()
                log_content += f"=====Files Scanned({len(scanned)})=====\n"
                log_content += "".join(scanned) + "\n"
                    
        # Errors
        if os.path.exists(log_path + "\ErrorLogs.txt"):
            with open(log_path + "\ErrorLogs.txt") as errors_file:
                errors = errors_file.readlines()
                log_content += f"=====Errors({len(errors)})=====\n"
                log_content += "".join(errors) + "\n"

    return log_content

if __name__ == "__main__":
    logs = viewLogs()
    print(logs)